labs(title = "Poisoning in San Diego by Year (Mean of Total Population)", y = "Mean of Total Population", x = 'Year', fill = 'Legend') +
theme(legend.position="right")
poison_plot
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_bar(stat="identity", aes(fill= factor(Year)), width=1) +
labs(title = "Poisoning in San Diego by Year (Mean of Total Population)", y = "Mean of Total Population", x = 'Year', fill = 'Legend') +
theme(legend.position="right")
poison_plot
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_bar(stat="identity", aes(fill= factor(Year))) +
labs(title = "Poisoning in San Diego by Year (Mean of Total Population)", y = "Mean of Total Population", x = 'Year', fill = 'Legend') +
theme(legend.position="right")
poison_plot
poison_plot <- ggplot(mean_year, aes(Year, Total, color = 'blue')) +
geom_bar(stat="identity", aes(fill= factor(Year))) +
labs(title = "Poisoning in San Diego by Year (Mean of Total Population)", y = "Mean of Total Population", x = 'Year', fill = 'Legend') +
theme(legend.position="right")
poison_plot
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_bar(stat="identity", aes(fill= factor(Year))) +
labs(title = "Poisoning in San Diego by Year (Mean of Total Population)", y = "Mean of Total Population", x = 'Year', fill = 'Legend') +
theme(legend.position="right")
poison_plot
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_bar(stat="identity", aes(fill= factor(Year))) +
labs(title = "Poisoning in San Diego by Year (Mean of Total Population)", y = "Mean of Total Population", x = 'Year', fill = 'Legend') +
theme(legend.position="right") +
theme(axis.text.x = element_text(vjust=1, hjust=1))+
poison_plot
library(ggplot2)
### Read csv data into R dataframe
poison_data <- read.csv("Poisoning_Death.csv")
### List all the field names (Variables in the dataset)
names(poison_data)
### Generate some statistics
## aggregate region by names, then calculate the mean for three rates
mean_year <- aggregate(poison_data[, c("Total_Male","Total_Female", "Total")], by=list(Year = poison_data$Year), FUN=mean, na.rm=TRUE)
print(mean_year)
### Make a visual plot ! aes: aesthetic mappings, geom_bar: rectangle bars
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_bar(stat="identity", aes(fill= factor(Year))) +
labs(title = "Poisoning in San Diego by Year (Mean of Total Population)", y = "Mean of Total Population", x = 'Year', fill = 'Legend') +
theme(legend.position="right") +
theme(axis.text.x = element_text(vjust=1, hjust=1))+
poison_plot
#Reading Tables and Conduct Poison Data Analysis
#### Created by Elizabeth Fabio, Sep 2020 -------- ####
#### Load required libraries
library(ggplot2)
### Read csv data into R dataframe
poison_data <- read.csv("Poisoning_Death.csv")
### List all the field names (Variables in the dataset)
names(poison_data)
### Generate some statistics
## aggregate region by names, then calculate the mean for three rates
mean_year <- aggregate(poison_data[, c("Total_Male","Total_Female", "Total")], by=list(Year = poison_data$Year), FUN=mean, na.rm=TRUE)
print(mean_year)
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_bar(stat="identity", aes(fill= factor(Year))) +
labs(title = "Poisoning in San Diego by Year (Mean of Total Population)", y = "Mean of Total Population", x = 'Year', fill = 'Legend') +
theme(legend.position="right") +
theme(axis.text.x = element_text(vjust=1, hjust=1))
poison_plot
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_bar(stat="identity", aes(fill= factor(Year))) +
labs(title = "Poisoning in San Diego by Year (Mean of Total Population)", y = "Mean of Total Population", x = 'Year', fill = 'Legend') +
theme(legend.position="right") +
scale_x_discrete(limits=c(Year))
poison_plot
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_bar(stat="identity", aes(fill= factor(Year))) +
labs(title = "Poisoning in San Diego by Year (Mean of Total Population)", y = "Mean of Total Population", x = 'Year', fill = 'Legend') +
theme(legend.position="right") +
scale_x_discrete(limits=c(mean_year$Year))
poison_plot
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_bar(stat="identity") +
labs(title = "Poisoning in San Diego by Year (Mean of Total Population)", y = "Mean of Total Population", x = 'Year', fill = 'Legend') +
theme(legend.position="right") +
scale_x_discrete(limits=c(mean_year$Year))
poison_plot
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_bar(stat="identity") +
labs(title = "Poisoning in San Diego by Year (Mean of Total Population)", y = "Mean of Total Population", x = 'Year') +
scale_x_discrete(limits=c(mean_year$Year))
poison_plot
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_bar(stat="identity") +
labs(title = "Poisoning in San Diego by Year (Mean of Total Population)", y = "Mean of Total Population", x = 'Year') +
scale_x_discrete(limits = factor(mean_year$Year))
poison_plot
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_bar(stat="identity") +
labs(title = "Poisoning in San Diego by Year (Mean of Total Population)", y = "Mean of Total Population", x = 'Year') +
scale_x_discrete(limits=c(mean_year$Year))
poison_plot
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_boxplot(stat="identity") +
labs(title = "Poisoning in San Diego by Year (Mean of Total Population)", y = "Mean of Total Population", x = 'Year') +
scale_x_discrete(limits=c(mean_year$Year))
poison_plot
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_bar(stat="identity") +
labs(title = "Poisoning in San Diego by Year (Mean of Total Population)", y = "Mean of Total Population", x = 'Year') +
scale_x_discrete(limits=c(mean_year$Year))
poison_plot
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_bar(stat="identity", color = Year) +
labs(title = "Poisoning in San Diego by Year (Mean of Total Population)", y = "Mean of Total Population", x = 'Year') +
scale_x_discrete(limits=c(mean_year$Year))
poison_plot
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_bar(stat="identity", color = factor(Year)) +
labs(title = "Poisoning in San Diego by Year (Mean of Total Population)", y = "Mean of Total Population", x = 'Year') +
scale_x_discrete(limits=c(mean_year$Year))
poison_plot
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_bar(stat="identity", color = mean_year$Year +
labs(title = "Poisoning in San Diego by Year (Mean of Total Population)", y = "Mean of Total Population", x = 'Year') +
scale_x_discrete(limits=c(mean_year$Year))
poison_plot
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_bar(stat="identity", color = mean_year$Year +
labs(title = "Poisoning in San Diego by Year (Mean of Total Population)", y = "Mean of Total Population", x = 'Year') +
#  scale_x_discrete(limits=c(mean_year$Year))
poison_plot
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_bar(stat="identity", color = mean_year$Year +
labs(title = "Poisoning in San Diego by Year (Mean of Total Population)", y = "Mean of Total Population", x = 'Year')
poison_plot
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_bar(stat="identity", color = mean_year$Year +
labs(title = "Poisoning in San Diego by Year (Mean of Total Population)", y = "Mean of Total Population", x = 'Year')
poison_plot
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_bar(stat="identity", color = mean_year$Year +
labs(title = "Poisoning in San Diego by Year (Mean of Total Population)", y = "Mean of Total Population", x = 'Year')
poison_plot
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_bar(stat="identity", color = mean_year$Year
#  labs(title = "Poisoning in San Diego by Year (Mean of Total Population)", y = "Mean of Total Population", x = 'Year')
poison_plot
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_bar(stat="identity", color = mean_year$Year)
labs(title = "Poisoning in San Diego by Year (Mean of Total Population)", y = "Mean of Total Population", x = 'Year')
poison_plot
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_bar(stat="identity", fill = mean_year$Year)
labs(title = "Poisoning in San Diego by Year (Mean of Total Population)", y = "Mean of Total Population", x = 'Year')
poison_plot
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_bar(stat="identity", fill = factor(mean_year$Year))
labs(title = "Poisoning in San Diego by Year (Mean of Total Population)", y = "Mean of Total Population", x = 'Year')
poison_plot
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_bar(stat="identity", aes(fill= factor(Year))) +
labs(title = "Poisoning in San Diego by Year (Mean of Total Population)", y = "Mean of Total Population", x = 'Year') +
scale_x_discrete(limits=c(mean_year$Year))
poison_plot
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_bar(stat="identity", aes(fill= Year)) +
labs(title = "Poisoning in San Diego by Year (Mean of Total Population)", y = "Mean of Total Population", x = 'Year') +
#  scale_x_discrete(limits=c(mean_year$Year))
poison_plot
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_bar(stat="identity", aes(fill= mean_year$Year)) +
labs(title = "Poisoning in San Diego by Year (Mean of Total Population)", y = "Mean of Total Population", x = 'Year') +
#  scale_x_discrete(limits=c(mean_year$Year))
poison_plot
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_bar(stat="identity") +
labs(title = "Poisoning in San Diego by Year (Mean of Total Population)", y = "Mean of Total Population", x = 'Year') +
#  scale_x_discrete(limits=c(mean_year$Year))
poison_plot
#Reading Tables and Conduct Poison Data Analysis
#### Created by Elizabeth Fabio, Sep 2020 -------- ####
#### Load required libraries
library(ggplot2)
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_bar(stat="identity") +
labs(title = "Poisoning in San Diego by Year (Mean of Total Population)", y = "Mean of Total Population", x = 'Year')
#  scale_x_discrete(limits=c(mean_year$Year))
poison_plot
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_bar(stat="identity", aes(colors(Year))) +
labs(title = "Poisoning in San Diego by Year (Mean of Total Population)", y = "Mean of Total Population", x = 'Year')
#  scale_x_discrete(limits=c(mean_year$Year))
poison_plot
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_bar(stat="identity") +
labs(title = "Poisoning in San Diego by Year (Mean of Total Population)", y = "Mean of Total Population", x = 'Year') +
scale_x_discrete(limits=c(mean_year$Year))
poison_plot
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_bar(stat="identity") +
labs(title = "Poisoning in San Diego by Year (Mean of Total Population)", y = "Mean of Total Population", x = 'Year') +
scale_x_continuous(limits=c(mean_year$Year))
poison_plot
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_bar(stat="identity") +
labs(title = "Poisoning in San Diego by Year (Mean of Total Population)", y = "Mean of Total Population", x = 'Year') +
scale_x_discrete(limits=c(mean_year$Year))
poison_plot
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_bar(stat="identity") +
labs(title = "Poisoning in San Diego by Year (Mean of Total Population)", y = "Mean of Total Population", x = 'Year') +
scale_x_discrete(limits=c(mean_year$Year))
poison_plot
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_bar(stat="identity") +
labs(title = "Poisoning in San Diego by Year", subtitle = "Mean of Total Population", y = "Mean", x = 'Year') +
scale_x_discrete(limits=c(mean_year$Year))
poison_plot
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_bar(stat="identity", aes(fill = 'blue')) +
labs(title = "Poisoning in San Diego by Year", subtitle = "Mean of Total Population", y = "Mean", x = 'Year') +
scale_x_discrete(limits=c(mean_year$Year))
poison_plot
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_bar(stat="identity", aes(fill = factor(Year))) +
labs(title = "Poisoning in San Diego by Year", subtitle = "Mean of Total Population", y = "Mean", x = 'Year') +
scale_x_discrete(limits=c(mean_year$Year))
poison_plot
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_bar(stat="identity", aes(fill = factor(Year))) +
labs(title = "Poisoning in San Diego by Year", subtitle = "Mean of Total Population", y = "Mean", x = 'Year', fill = 'Legend') +
scale_x_discrete(limits=c(mean_year$Year))
poison_plot
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_bar(stat="identity", aes(fill = factor(Year))) +
labs(title = "Poisoning in San Diego by Year", subtitle = "Mean of Total Population", y = "Mean", x = 'Year', fill = 'Legend')
poison_plot
poison_plot <- ggplot(mean_year, aes(Year, Total)) +
geom_bar(stat="identity", aes(fill = factor(Year))) +
scale_x_continuous(breaks = NULL) +
labs(title = "Poisoning in San Diego by Year", subtitle = "Mean of Total Population", y = "Mean", x = 'Year', fill = 'Legend')
poison_plot
poison_plot <- ggplot(mean_year, aes(Year, Total_Male, Total_Female)) +
geom_bar(stat="identity", aes(fill = factor(Year))) +
scale_x_continuous(breaks = NULL) +
labs(title = "Poisoning in San Diego by Year", subtitle = "Mean of Total Population", y = "Mean", x = 'Year', fill = 'Legend')
poison_plot
poison_plot <- ggplot(mean_year, aes(x=Year, y=Total)) +
geom_bar(stat="identity", aes(fill = factor(Year))) +
scale_x_continuous(breaks = NULL) +
labs(title = "Poisoning in San Diego by Year", subtitle = "Mean of Total Population", y = "Mean", x = 'Year', fill = 'Legend')
poison_plot
poison_plot <- ggplot(mean_year, aes(x=Year, y=Total_Male, y=Total_Female)) +
geom_bar(stat="identity", aes(fill = factor(Year))) +
scale_x_continuous(breaks = NULL) +
labs(title = "Poisoning in San Diego by Year", subtitle = "Mean of Total Population", y = "Mean", x = 'Year', fill = 'Legend')
poison_plot
poison_plot <- ggplot(mean_year, aes(x = Year, y = Total)) +
geom_bar(stat="identity", aes(fill = factor(Year))) +
scale_x_continuous(breaks = NULL) +
labs(title = "Poisoning in San Diego by Year", subtitle = "Mean of Total Population", y = "Mean", x = 'Year', fill = 'Legend')
poison_plot
mean_year <- aggregate(poison_data[, c("Total_Male","Total_MaleRate", "Total_Female", "Total_FemaleRate", "Total_Rate")], by=list(Year = poison_data$Year), FUN=mean, na.rm=TRUE)
print(mean_year)
### Generate some statistics
## aggregate region by names, then calculate the mean for three rates
mean_year <- aggregate(poison_data[, c("Total_Male","Total_MaleRate", "Total_Female", "Total_FemaleRate", "Total_Rate")], by=list(Year = poison_data$Year), FUN=mean, na.rm=TRUE)
mean_year <- aggregate(poison_data[, c("Total_Male","Total_MaleRate", "Total_Female", "Total_FemaleRate", "TotalRate")], by=list(Year = poison_data$Year), FUN=mean, na.rm=TRUE)
print(mean_year)
ggsave("poisoning.png", width = 12, height = 6)
poison_plot <- ggplot(mean_year, aes(x = Year, y = Total)) +
geom_bar(stat="identity", aes(fill = factor(Year))) +
scale_x_continuous(breaks = NULL) +
labs(title = "Poisoning in San Diego by Year", subtitle = "Mean of Total Population", y = "Average", x = 'Year', fill = 'Legend')
poison_plot
mean_year <- aggregate(poison_data[, c("Total_Male","Total_MaleRate", "Total_Female", "Total_FemaleRate", "TotalRate", "Total")], by=list(Year = poison_data$Year), FUN=mean, na.rm=TRUE)
print(mean_year)
poison_plot <- ggplot(mean_year, aes(x = Year, y = Total)) +
geom_bar(stat="identity", aes(fill = factor(Year))) +
scale_x_continuous(breaks = NULL) +
labs(title = "Poisoning in San Diego by Year", subtitle = "Mean of Total Population", y = "Average", x = 'Year', fill = 'Legend')
poison_plot
## show the plot & save it to file
ggsave("poisoning.png", width = 12, height = 6)
poison_plot <- ggplot(mean_year, aes(x = Year, y = Total)) +
geom_bar(stat="identity", aes(fill = factor(Year))) +
scale_x_continuous(breaks = NULL) +
labs(title = "Poisoning in San Diego from 2011-2017", subtitle = "Mean of Total Population", y = "Average", x = 'Year', fill = 'Legend')
poison_plot
## show the plot & save it to file
ggsave("poisoning.png", width = 12, height = 6)
poison_plot <- ggplot(mean_year, aes(x = Year, y = Total)) +
geom_bar(stat="identity", aes(fill = factor(Year))) +
scale_x_continuous(breaks = NULL) +
labs(title = "Poisoning in San Diego from 2011-2017", subtitle = "Mean from the Population", y = "Average", x = 'Year', fill = 'Legend')
poison_plot
## show the plot & save it to file
ggsave("poisoning.png", width = 12, height = 6)
library(tm)
install.packages("SnowballC")
library(wordcloud)
install.packages("RCurl")
library(RCurl)
library(xml2)
library(SnowballC)
url = "https://en.wikipedia.org/wiki/Big_data"
rquery.wordcloud(x=url, type="url")
url = "https://en.wikipedia.org/wiki/Big_data"
test <- rquery.wordcloud(x=url, type="url")
install.packages("XML")
url = "https://en.wikipedia.org/wiki/Big_data"
test <- rquery.wordcloud(x=url, type="url")
library(XML)
url = "https://en.wikipedia.org/wiki/Big_data"
test <- rquery.wordcloud(x=url, type="url")
View(mean_outcome)
library(twitteR)
library(tm)
library(wordcloud)
library(RColorBrewer)
library(NLP)
my_corpus = Corpus(DirSource("wordcloud"))
tdm = TermDocumentMatrix(my_corpus,
control = list(removePunctuation = TRUE,
stopwords = c("big", "data", stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
m = as.matrix(tdm)
word_freqs = sort(rowSums(m), decreasing=TRUE)
dm = data.frame(word=names(word_freqs), freq=word_freqs)
wordcloud(dm$word, dm$freq, random.order=FALSE, random.color=FALSE, rot.per= 0, colors=brewer.pal(8, "Dark2"))
my_corpus = Corpus(DirSource("wordcloud"))
#You can add or remove STOPWORDS in the list
tdm = TermDocumentMatrix(my_corpus,
control = list(removePunctuation = TRUE,
stopwords = c("big", "data", "httpsenwikipediaorgwikibigdata", stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
# define tdm as matrix
m = as.matrix(tdm)
# get word counts in decreasing order
word_freqs = sort(rowSums(m), decreasing=TRUE)
# create a data frame with words and their frequencies
dm = data.frame(word=names(word_freqs), freq=word_freqs)
# plot wordcloud in R
wordcloud(dm$word, dm$freq, random.order=FALSE, random.color=FALSE, rot.per= 0, colors=brewer.pal(8, "Dark2"))
#Put your text files inside the temp folder(wordcloud) under working directory(D:\webexercise-2)
my_corpus = Corpus(DirSource("wordcloud"))
tdm = TermDocumentMatrix(my_corpus,
control = list(removePunctuation = TRUE,
stopwords = c("big", "data", "httpsenwikipediaorgwikibigdata", "wikipedia", stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
control
help(control)
"Control"
??control
View(my_corpus)
View(tdm)
# define tdm as matrix
m = as.matrix(tdm)
View(m)
tdm = TermDocumentMatrix(my_corpus,
control = list(removePunctuation = TRUE,
stopwords = c("big", "data", "bigdata", "httpsenwikipediaorgwikibigdata", "wikipedia", stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
# define tdm as matrix
m = as.matrix(tdm)
View(m)
# define tdm as matrix
m = as.matrix(tdm)
# get word counts in decreasing order
word_freqs = sort(rowSums(m), decreasing=TRUE)
# create a data frame with words and their frequencies
dm = data.frame(word=names(word_freqs), freq=word_freqs)
View(dm)
#Remove words that appear once
dm <- dm[freq > 1]
#Remove words that appear once
dm <- dm$freq > 1]
#Remove words that appear once
dm <- dm$freq > 1
# create a data frame with words and their frequencies
dm = data.frame(word=names(word_freqs), freq=word_freqs)
#Remove words that appear once
dm <- subset(dm, freq!= 1)
#Plot wordcloud in R
wordcloud(dm$word, dm$freq, random.order=FALSE, random.color=FALSE, rot.per= 0, colors=brewer.pal(8, "Dark2"))
#Save the image in png format – a PNG image will be created in the Working Directory
png("WordCloud.png", width=12, height=8, units="in", res=300)
#Remove words that appear once
dm <- subset(dm, freq > 5)
#Plot wordcloud in R
wordcloud(dm$word, dm$freq, random.order=FALSE, random.color=FALSE, rot.per= 0, colors=brewer.pal(8, "Dark2"))
#Save the image in png format – a PNG image will be created in the Working Directory
png("WordCloud.png", width=12, height=8, units="in", res=300)
#Plot wordcloud in R
wordcloud(dm$word, dm$freq, random.order=FALSE, random.color=FALSE, rot.per= 0, colors=brewer.pal(8, "Dark2"))
tdm = TermDocumentMatrix(my_corpus,
control = list(removePunctuation = TRUE,
stopwords = c("big", "data", "bigdata", "httpsenwikipediaorgwikibigdata", "wikipedia", "wikimedia", "-", stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
# define tdm as matrix
m = as.matrix(tdm)
# get word counts in decreasing order
word_freqs = sort(rowSums(m), decreasing=TRUE)
# create a data frame with words and their frequencies
dm = data.frame(word=names(word_freqs), freq=word_freqs)
#Remove words that appear less than 5 times
dm <- subset(dm, freq > 5)
View(dm)
tdm = TermDocumentMatrix(my_corpus,
control = list(removePunctuation = TRUE,
stopwords = c("big", "data", "bigdata", "httpsenwikipediaorgwikibigdata", "wikipedia", "wikimedia", "-", stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
# define tdm as matrix
m = as.matrix(tdm)
# get word counts in decreasing order
word_freqs = sort(rowSums(m), decreasing=TRUE)
# create a data frame with words and their frequencies
dm = data.frame(word=names(word_freqs), freq=word_freqs)
#Remove words that appear less than 5 times
dm <- subset(dm, freq > 5)
tdm = TermDocumentMatrix(my_corpus,
control = list(removePunctuation = TRUE,
stopwords = c("big", "data", "bigdata", "httpsenwikipediaorgwikibigdata", "wikipedia", "wikimedia", "–", stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
# define tdm as matrix
m = as.matrix(tdm)
# get word counts in decreasing order
word_freqs = sort(rowSums(m), decreasing=TRUE)
# create a data frame with words and their frequencies
dm = data.frame(word=names(word_freqs), freq=word_freqs)
#Remove words that appear less than 5 times
dm <- subset(dm, freq > 5)
#Plot wordcloud in R
wordcloud(dm$word, dm$freq, random.order=FALSE, random.color=FALSE, rot.per= 0, colors=brewer.pal(8, "Dark2"))
#Save the image in png format – a PNG image will be created in the Working Directory
png("WordCloud.png", width=12, height=8, units="in", res=300)
#Plot wordcloud in R
wordcloud(dm$word, dm$freq, random.order=FALSE, random.color=FALSE, rot.per= 0, colors=brewer.pal(8, "Dark2"))
#Save the image in png format – a PNG image will be created in the Working Directory
png("BigDataWiki.png", width=12, height=8, units="in", res=300)
wordcloud(dm$word, dm$freq, random.order=FALSE, random.color=FALSE, rot.per= 0, colors=brewer.pal(8, "Dark2"))
#dev.off will save the output PNG file into the working folder
dev.off()
tdm = TermDocumentMatrix(my_corpus,
control = list(removePunctuation = TRUE,
stopwords = c("big", "data", "bigdata", "httpsenwikipediaorgwikibigdata", "wikipedia", "wikimedia", "–",
"httpswwwworldcatorgissn", "httpswwwncbinlmnihgovpmcarticlespmc", "httpspubmedncbinlmnihgov",
"httpsapisemanticscholarorgcorpusid", stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
# define tdm as matrix
m = as.matrix(tdm)
# get word counts in decreasing order
word_freqs = sort(rowSums(m), decreasing=TRUE)
# create a data frame with words and their frequencies
dm = data.frame(word=names(word_freqs), freq=word_freqs)
#Remove words that appear less than 5 times
dm <- subset(dm, freq > 5)
#Plot wordcloud in R
wordcloud(dm$word, dm$freq, random.order=FALSE, random.color=FALSE, rot.per= 0, colors=brewer.pal(8, "Dark2"))
#Save the image in png format – a PNG image will be created in the Working Directory
png("BigDataWiki.png", width=12, height=8, units="in", res=300)
wordcloud(dm$word, dm$freq, random.order=FALSE, random.color=FALSE, rot.per= 0, colors=brewer.pal(8, "Dark2"))
#dev.off will save the output PNG file into the working folder
dev.off()
tdm = TermDocumentMatrix(my_corpus,
control = list(removePunctuation = TRUE,
stopwords = c("big", "data", "bigdata", "httpsenwikipediaorgwikibigdata", "wikipedia", "wikimedia", "–",
"httpswwwworldcatorgissn", "httpswwwncbinlmnihgovpmcarticlespmc", "httpspubmedncbinlmnihgov",
"httpsapisemanticscholarorgcorpusid", "january", "february", "march", "april", "may", "june",
"july", "august", "september", "october", "november", "december", stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
# define tdm as matrix
m = as.matrix(tdm)
# get word counts in decreasing order
word_freqs = sort(rowSums(m), decreasing=TRUE)
# create a data frame with words and their frequencies
dm = data.frame(word=names(word_freqs), freq=word_freqs)
#Remove words that appear less than 5 times
dm <- subset(dm, freq > 5)
#Plot wordcloud in R
wordcloud(dm$word, dm$freq, random.order=FALSE, random.color=FALSE, rot.per= 0, colors=brewer.pal(8, "Dark2"))
# create a data frame with words and their frequencies
dm = data.frame(word=names(word_freqs), freq=word_freqs)
#Remove words that appear less than 5 times
dm <- subset(dm, freq != 1)
#Remove words that appear less than 5 times
dm <- subset(dm, freq > 5)
#Plot wordcloud in R
wordcloud(dm$word, dm$freq, random.order=FALSE, random.color=FALSE, rot.per= 0, colors=brewer.pal(8, "Dark2"))
#Save the image in png format – a PNG image will be created in the Working Directory
png("BigDataWiki.png", width=12, height=8, units="in", res=300)
tdm = TermDocumentMatrix(my_corpus,
control = list(removePunctuation = TRUE,
stopwords = c("big", "data", "bigdata", "httpsenwikipediaorgwikibigdata", "wikipedia", "wikimedia", "–",
"httpswwwworldcatorgissn", "httpswwwncbinlmnihgovpmcarticlespmc", "httpspubmedncbinlmnihgov",
"httpsapisemanticscholarorgcorpusid", "january", "february", "march", "april", "may", "june",
"july", "august", "september", "october", "november", "december", stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
# define tdm as matrix
m = as.matrix(tdm)
# get word counts in decreasing order
word_freqs = sort(rowSums(m), decreasing=TRUE)
# create a data frame with words and their frequencies
dm = data.frame(word=names(word_freqs), freq=word_freqs)
#Remove words that appear less than 5 times
dm <- subset(dm, freq > 5)
#Plot wordcloud in R
wordcloud(dm$word, dm$freq, random.order=FALSE, random.color=FALSE, rot.per= 0, colors=brewer.pal(8, "Dark2"))
#Save the image in png format – a PNG image will be created in the Working Directory
png("BigDataWiki.png", width=12, height=8, units="in", res=300)
#Plot wordcloud in R
wordcloud(dm$word, dm$freq, random.order=FALSE, random.color=FALSE, rot.per= 0, colors=brewer.pal(8, "Dark2"))
#Save the image in png format – a PNG image will be created in the Working Directory
png("BigDataWiki.png", width=12, height=8, units="in", res=300)
wordcloud(dm$word, dm$freq, random.order=FALSE, random.color=FALSE, rot.per= 0, colors=brewer.pal(8, "Dark2"))
#dev.off will save the output PNG file into the working folder
dev.off()
